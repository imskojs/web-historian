// Generated by CoffeeScript 1.9.0
var archive, fsLib, headers, pathLib, urlLib;

pathLib = require('path');

fsLib = require('fs');

urlLib = require('url');

archive = require('../helpers/archive-helpers');

exports.headers = headers = {
  "access-control-allow-origin": "*",
  "access-control-allow-methods": "GET, POST, PUT, DELETE, OPTIONS",
  "access-control-allow-headers": "content-type, accept",
  "access-control-max-age": 10,
  'Content-Type': "text/html",
  "encoding": "utf-8"
};

exports.sendResponse = function(res, content) {
  res.writeHead(200, headers);
  res.write(content);
  return res.end();
};

exports.serveAssets = function(res, asset, callback) {

  /*
  Check the public folder for requested assets.
  If requested asset does not exist , check the archive folder
    If requested asset does not exist in archive folder
   */
  var archivedSites, siteAssets;
  siteAssets = "" + archive.paths.siteAssets + asset;
  archivedSites = "" + archive.paths.archivedSites + asset;
  if (fsLib.existsSync(siteAssets)) {
    return fsLib.readFile(siteAssets, {
      "encoding": "utf-8"
    }, function(err, content) {
      return exports.sendResponse(res, content);
    });
  } else if (fsLib.existsSync(archivedSites)) {
    return fsLib.readFile(archivedSites, {
      "encoding": "utf-8"
    }, function(err, content) {
      return exports.sendResponse(res, content);
    });
  } else {
    res.writeHead(404);
    return res.end('page not found');
  }
};

exports.sendRedirect = function(res, loc) {
  res.writeHead(302, {
    "Location": loc
  });
  return res.end();
};
